project: network_exp # project name should not have spaces
job_name: "SOTA FL experiment"

deployer: sbc
# python_version: "3.10"

code:
    # path: <code-root-dir>
    # if `path` is ommited it defaults to the config file location
  client:
    # Assumes relative paths from path
    command: >-
      python3 ./client.py
      --flserver_address=${COLEXT_SERVER_ADDRESS}
  server:
    command: >-
      python3 ./server.py
      --num_clients=${COLEXT_N_CLIENTS}
      --num_rounds=30

network:
  - tag: default
    upstream:
      bandwidth: 50Mbps
    downstream:
      bandwidth: 50Mbps
  - tag: slow
    upstream:
      bandwidth: 1Mbps
      latency: 1ms
    downstream:
      bandwidth: 1Mbps
      latency: 1ms
  - tag: veryslow
    upstream:
      bandwidth: 100Kbps
      latency: 1ms
    downstream:
      bandwidth: 100Kbps
      latency: 1ms
  - tag: DynFast
    dynamic:
    - iterator: time 
      structure: [bandwidth, latency, delay-distribution] 
      commands:
      - [10,set ,outgoing , -1, 1ms, normal]
      - [20,set ,outgoing , 1000Mbps, 0.1ms, normal]
      - [100,del, outgoing , 1000Mbps, 0.1ms, normal]
      - [100, set ,outgoing , 1000Mbps, 0.1ms, normal]
      - [120,set,outgoing , 10Mbps ,  0.1ms, normal]

    - iterator: epoch #  in epochs
      commands:
      - [10,set,outgoing , 1Mbps, 10ms]
      - [20,set,outgoing , 1000Mbps, 0.1ms]

clients:
        #  - dev_type: LattePandaDelta3
        #count: 4
        #add_args: "--max_step_count=50"
        #network: veryslow

    #- dev_type: JetsonOrinNano
     # count: 2
     # add_args: "--max_step_count=200"
     # network: slow

    - dev_type: OrangePi5B
      count: 2
      add_args: "--max_step_count=100"
      network: 
        - default
        - DynFast

    #  - dev_type: OrangePi5B
    #count: 2
    #add_args: "--max_step_count=50"
    #network: default
  #- { dev_type: JetsonAGXOrin,  count: 1 }
  #- { dev_type: JetsonOrinNano, count: 2 }
  #- { dev_type: JetsonXavierNX, count: 2 }
  #- { dev_type: JetsonNano, count: 6 }

    # Monitoring defaults
monitoring:
  live_metrics: True # True/False
  push_interval: 10 # in seconds
  scraping_interval: 0.3 # in seconds
